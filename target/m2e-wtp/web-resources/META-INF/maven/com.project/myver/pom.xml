<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.project</groupId>
	<artifactId>myver</artifactId>
	<name>myver</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<!-- 21.01.14
		 - 수정사항 : springframework 버전 변경. 3.1.1 RELEASE -> 3.2.0 RELEASE
		 - 이유 : spring security 설정을 위해.
		         - 3.2버전부터 사용자가 xml 사용하지 않고도 annotation을 통해 쉽게 설정 가능하다고...
		 - 참고사이트 : https://bravenamme.github.io/2019/08/01/spring-security-start/ -->
	 <!-- 21.01.17
	 	 - 수정사항 : java 버전변경 1.8 -> 1.7
	 	 - 이유 : JDK랑 Spring Framework 버전을 맞추지 않아서
	 	 		 "org.springframework.asm.ClassReader.<init>(Unknown Source)" 에러 발생
	 	 		 JDK 1.7 - Spring 3.xx   /// JDK 1.8 - Spring 4.xx
	 	 - 참고사이트 : https://m.blog.naver.com/PostView.nhn?blogId=reinstate10&logNo=220617881102&proxyReferer=https:%2F%2Fwww.google.com%2F -->
	<!-- 21.02.14에 자바 버전 변경(1.7->1.8) 및 스프링 버전 변경(3.2.0->4.3.4)
		 -> 오류발생
			: The container 'Maven Dependencies' references non existing library 
			 'C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\4.3.4.RELEASE\spring-security-core-4.3.4.RELEASE.jar'
			 Build Path Problem
		 -->
	<!-- 21.04.07 자바 버전 원상복귀(1.8 ->1.7) 스프링 버전 원상복귀 (4.3.4 -> 3.2.0) -->
	<!-- 21.04.14 tiles 버전 추가
		 - 참고사이트 : https://wjheo.tistory.com/entry/Spring-Spring-Tiles-Framework-적용 [우공공] -->
	<!-- 21.07.08 자바, 스프링 버전 변경. 자바(1.7 0> 1.8) 스프링(3.2.0.RELEASE -> 5.0.7.RELEASE) --> 
	<!-- 21.07.13 tiles 버전 변경(2.2.2 -> 3.0.5) -->
	<!-- 21.07.22 spring security 버전에 맞게 spring 버전 변경
		 - spring security 버전: 5.0.7
		 - spring 버전: 5.0.7 -> 5.0.8
		 - 참고: https://mvnrepository.com/artifact/org.springframework.security/spring-security-core/5.0.7.RELEASE -->
	<properties>
		<java-version>1.8</java-version>
		<org.springframework-version>5.0.8.RELEASE</org.springframework-version>
		<org.springframework.security-version>5.0.7.RELEASE</org.springframework.security-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<org.apache.tiles-version>3.0.5</org.apache.tiles-version>
	</properties>
	<dependencies>
		
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
		<!-- 21.01.10
			수정사항 : 버전변경  4.7 -> 4.12 -> 4.7
			참고사이트 : https://all-record.tistory.com/175?category=733072 -->
		<!-- 21.04.08 junit 버전 변경 (4.7 -> 4.12) -->
		<!-- Test -->
		<!-- junit은 MySQL, MyBatis가 정상적으로 연동되었는지 테스트하기 위해 필요 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>  
		
		<!-- 21.01.10
			- 추가사항 : MySQL, MyBatis 연동에 필요한 라이브러리 삽입
			- 참고사이트 : https://all-record.tistory.com/175?category=733072 -->  
		<!-- MySQL -->
		<!-- 21.01.10
			- 수정사항 : mysql 버전 변경. 6.0.5 -> 8.0.11
			- 이유 : junit테스트 중 오류 발생. Unkown system variable 'query_cache_size' 
			- 참고사이트 : https://soo-vely-dev.tistory.com/59 -->
		<!-- 21.04.08
			- 수정사항 : mysql 버전 변경 (8.0.11 -> 5.1.47)
			- 이유 : mysql 5.5 이상은 java 8 버전을 이용해야함. 그러나 현 프로젝트의 버전은 7이라서.
			- 참고사이트 : https://xinet.kr/?p=1591 -->
		<!-- 21.07.08 자바버전 변경(7 ->8)에 따른 mysql버전변경 (5.1.47 -> 8.0.11)-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.11</version>
        </dependency>
 
        <!-- MyBatis 3.4.1 -->
        <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.4.1</version>
        </dependency>
 
 
        <!-- MyBatis-Spring -->
        <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.3.0</version>
        </dependency>
 
        <!-- Spring-jdbc -->
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
 
        <!-- Spring-test -->
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-test -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>

		
		<!-- 21.01.10
			 - 추가사항 : MyBatis 로그를 읽기위해 관련 라이브러리 추가
			 - 참고사이트 : https://all-record.tistory.com/176?category=733072 -->
		<!-- Mybatis log -->
        <!-- https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1 -->
        <dependency>
            <groupId>org.bgee.log4jdbc-log4j2</groupId>
            <artifactId>log4jdbc-log4j2-jdbc4</artifactId>
            <version>1.16</version>
        </dependency>

		<!-- 21.01.13
			 - 추가사항 : Spring Security 관련 라이브러리 추가 
			 - 참고사이트 : https://jungeunlee95.github.io/java/2019/07/17/2-Spring-Security/
			 			 https://bravenamme.github.io/2019/08/01/spring-security-start/ -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-core</artifactId>
		    <version>${org.springframework.security-version}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-config</artifactId>
		    <version>${org.springframework.security-version}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-taglibs</artifactId>
		    <version>${org.springframework.security-version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-web</artifactId>
		    <version>${org.springframework.security-version}</version>
	    </dependency>
		
		<!-- 21.04.14 추가
			 - Tiles : 웹 페이지의 상하단 메뉴와 같이 반복적으로 사용되는 부분들에 대한 코드를 분리해 
			 		      한 곳에서 관리를 가능하게 해주는 프레임워크
			 - 참고사이트 : https://kecmok.tistory.com/16
			 			 https://wjheo.tistory.com/entry/Spring-Spring-Tiles-Framework-적용 [우공공] -->
		<dependency> 
			<groupId>org.apache.tiles</groupId> 
			<artifactId>tiles-servlet</artifactId> 
			<version>${org.apache.tiles-version}</version> 
		</dependency> 
		
		<dependency> 
			<groupId>org.apache.tiles</groupId> 
			<artifactId>tiles-api</artifactId> 
			<version>${org.apache.tiles-version}</version> 
		</dependency> 
		
		<dependency> 
			<groupId>org.apache.tiles</groupId> 
			<artifactId>tiles-jsp</artifactId> 
			<version>${org.apache.tiles-version}</version> 
		</dependency> 
		
		<dependency> 
			<groupId>org.apache.tiles</groupId> 
			<artifactId>tiles-core</artifactId> 
			<version>${org.apache.tiles-version}</version> 
		</dependency> 
		
		<dependency> 
			<groupId>org.apache.tiles</groupId> 
			<artifactId>tiles-template</artifactId> 
			<version>${org.apache.tiles-version}</version> 
		</dependency>

		<!-- 21.04.21 추가
			 - jackson 라이브러리 추가
			 - JSON 데이터를 객체로 또는 그 반대로 맵핑하는데 사용 -->
		 <!-- 21.07.13 버전 변경 (2.8.8 -> 2.9.7) -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>2.9.7</version>
		</dependency>
		
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		    <version>2.9.7</version>
		</dependency>
		
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.9.7</version>
		</dependency>
		
		<!-- 21.05.01
			 - 다중파일 업로드 관련 라이브러리 추가
			 - 출처: https://ktko.tistory.com/entry/Spring-단일파일-다중파일-업로드하기 [KTKO 개발 블로그와 여행 일기] -->
		<!-- Commons FileUpload -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.2</version>
        </dependency>
         
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
        

	</dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                	<!-- 21.01.17
					 	 - 수정사항 : java 버전변경에 따라 메이븐 플러그인에서의 JDK 버전 변경. 1.8 -> 1.7
					 	 - 이유 : 미일치시 dynamic web module x.x requires java x.x or newer 에러 발생
					 	 - 참고사이트 : https://blog.naver.com/PostView.nhn?blogId=ajdkfl6445&logNo=221549536647&categoryNo=0&parentCategoryNo=0&viewDate=&currentPage=1&postListTopCurrentPage=1&from=postView -->
				 	<!-- 21.07.08 자바 버전 변경에 따라 (1.7 -> 1.8) -->
                    <source>1.8</source>
                    <target>1.8</target> 
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
